#include "SPIFFSEditor.h"
#include <FS.h>

//File: edit.htm.gz, Size: 5274
#define edit_htm_gz_len 5274
const uint8_t edit_htm_gz[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x08, 0x75, 0x11, 0x7f, 0x60, 0x02, 0x03, 0x65, 0x64,
  0x69, 0x74, 0x2e, 0x68, 0x74, 0x6d, 0x00, 0xc5, 0x1c, 0x6b, 0x77, 0xd3,
  0xc6, 0xf2, 0x7b, 0xcf, 0xe9, 0x7f, 0x58, 0xd4, 0x5b, 0x2c, 0xd5, 0xcf,
  0x3c, 0x48, 0xa9, 0x13, 0xc3, 0xb5, 0x9d, 0x84, 0x84, 0x3c, 0x89, 0x1d,
  0x68, 0xe0, 0x72, 0x7b, 0x64, 0x69, 0x6d, 0x8b, 0xc8, 0x92, 0x2a, 0xc9,
  0xb1, 0x4d, 0x6e, 0xfe, 0xfb, 0x9d, 0xd9, 0x87, 0xb4, 0x92, 0x65, 0x13,
  0xa0, 0x3d, 0x25, 0x80, 0xad, 0xdd, 0x99, 0xd9, 0xd9, 0x79, 0xef, 0x43,
  0xd9, 0x7b, 0x52, 0xad, 0xf6, 0xc7, 0x4e, 0x44, 0xe0, 0x6f, 0x3c, 0xa6,
  0x24, 0x70, 0x4d, 0xc7, 0x23, 0xe3, 0x78, 0xe2, 0x92, 0xc8, 0x9f, 0x86,
  0x16, 0x25, 0xfe, 0x90, 0x75, 0x8c, 0xe9, 0x9c, 0x50, 0xcf, 0xf2, 0x6d,
  0x6a, 0x93, 0x03, 0xdb, 0x89, 0xfd, 0xb0, 0x7a, 0x69, 0x8e, 0x28, 0xa1,
  0x93, 0x01, 0xb5, 0xb1, 0x11, 0xd0, 0x7a, 0x97, 0xc7, 0x87, 0x87, 0x3d,
  0xde, 0x5b, 0xb3, 0x82, 0x80, 0x54, 0xab, 0x2f, 0x7e, 0xfc, 0x61, 0xef,
  0xc9, 0xfe, 0x45, 0xb7, 0x7f, 0x73, 0x79, 0xc0, 0xc8, 0x62, 0x03, 0x23,
  0xef, 0x9a, 0xde, 0xa8, 0xa5, 0x51, 0x4f, 0x63, 0x2d, 0xd4, 0xb4, 0xf1,
  0x33, 0x76, 0x62, 0x97, 0xbe, 0x38, 0xe8, 0x5d, 0x8a, 0x31, 0xf6, 0xea,
  0xbc, 0x05, 0xba, 0xa2, 0x78, 0xe1, 0x52, 0x12, 0x2f, 0x02, 0xda, 0xd2,
  0x62, 0x3a, 0x8f, 0xeb, 0x56, 0x14, 0x69, 0x64, 0x42, 0x6d, 0xc7, 0x6c,
  0x69, 0x91, 0x15, 0x52, 0x4e, 0xaa, 0x66, 0x4d, 0xc8, 0xfd, 0x8f, 0x3f,
  0x10, 0xf2, 0xb9, 0xea, 0x78, 0x36, 0x9d, 0x37, 0xc9, 0x56, 0xa3, 0xb1,
  0x8b, 0x0d, 0x81, 0x1f, 0x39, 0xb1, 0xe3, 0x7b, 0x4d, 0x62, 0x0e, 0x22,
  0xdf, 0x9d, 0xc6, 0x94, 0x35, 0xbb, 0x74, 0x18, 0x37, 0xc9, 0xb3, 0x60,
  0xce, 0x9e, 0x06, 0x7e, 0x68, 0xd3, 0xb0, 0x49, 0x36, 0x82, 0x39, 0x08,
  0xc0, 0x75, 0x6c, 0xf2, 0xd3, 0xf6, 0xf6, 0x36, 0xef, 0x32, 0xad, 0xdb,
  0x51, 0xe8, 0x4f, 0x3d, 0xbb, 0x6a, 0xf9, 0xae, 0x0f, 0x40, 0x3f, 0x1d,
  0x3e, 0xc3, 0x1f, 0xd6, 0x6b, 0x3b, 0x11, 0xc8, 0x6e, 0xd1, 0x24, 0x9e,
  0xef, 0x51, 0x41, 0x6a, 0x5e, 0x8d, 0xc6, 0xa6, 0xed, 0xcf, 0x9a, 0xa4,
  0x01, 0x3f, 0x1b, 0x0d, 0xa0, 0x19, 0x8e, 0x06, 0xa6, 0x4e, 0x1a, 0x15,
  0xf1, 0xb7, 0xb6, 0x4d, 0x0c, 0x06, 0x3c, 0xf4, 0xbd, 0xb8, 0x1a, 0x39,
  0x9f, 0x29, 0x0c, 0xbd, 0x29, 0x78, 0x61, 0x6d, 0x43, 0x73, 0xe2, 0xb8,
  0x40, 0x36, 0x32, 0xbd, 0xa8, 0x1a, 0xd1, 0xd0, 0x19, 0xa6, 0x7d, 0x33,
  0xea, 0x8c, 0xc6, 0x71, 0x73, 0xe0, 0xbb, 0x36, 0x34, 0x3e, 0xf0, 0xc9,
  0x4f, 0x5d, 0x3e, 0x7f, 0xd7, 0x89, 0x80, 0x22, 0x0a, 0x4d, 0xe1, 0x29,
  0xf6, 0x03, 0x60, 0x46, 0x99, 0x37, 0xff, 0x3e, 0x31, 0xc3, 0x91, 0xe3,
  0xc9, 0xa7, 0xc0, 0xb4, 0x6d, 0xc7, 0x1b, 0xf1, 0x47, 0x41, 0xd5, 0x75,
  0x38, 0xd5, 0x54, 0x88, 0x21, 0x75, 0xcd, 0xd8, 0xb9, 0xe3, 0x74, 0x27,
  0x8e, 0x57, 0x9d, 0x39, 0x76, 0x3c, 0x6e, 0x92, 0x9d, 0x86, 0x60, 0xdf,
  0x9a, 0x86, 0x11, 0x4a, 0x29, 0xf0, 0x1d, 0x2f, 0xa6, 0x61, 0x4a, 0x2b,
  0x0a, 0x4c, 0x8f, 0x53, 0x93, 0x72, 0x94, 0x22, 0x4e, 0x84, 0xe8, 0x78,
  0xae, 0xe3, 0xd1, 0xea, 0xc0, 0xf5, 0xad, 0xdb, 0x2c, 0x4f, 0x3b, 0x8c,
  0x7a, 0xc2, 0x55, 0x73, 0xec, 0xdf, 0xd1, 0x90, 0xdc, 0x2b, 0xda, 0x11,
  0xf4, 0x48, 0x1e, 0x86, 0x0f, 0x9b, 0x8c, 0x79, 0x70, 0x70, 0xc0, 0x61,
  0xe2, 0xbb, 0x29, 0x08, 0x0d, 0x74, 0x81, 0x5f, 0x92, 0x79, 0xaa, 0x32,
  0xc8, 0x0b, 0xa8, 0x40, 0xb4, 0x92, 0x90, 0xe3, 0x05, 0xd3, 0x38, 0x2f,
  0xaa, 0x8c, 0xbd, 0xf9, 0x81, 0x69, 0x39, 0xf1, 0x22, 0x95, 0x2e, 0xa2,
  0xdd, 0x4b, 0x9d, 0x22, 0xc1, 0x70, 0x62, 0xba, 0xcc, 0x0a, 0xc8, 0x5b,
  0x1a, 0xda, 0xa6, 0x67, 0x56, 0x48, 0x3b, 0x74, 0x4c, 0x60, 0xb1, 0x97,
  0x35, 0x82, 0xea, 0xc4, 0xff, 0x5c, 0x9d, 0xc2, 0x33, 0xb4, 0xb9, 0xd4,
  0x8a, 0x15, 0x45, 0x83, 0x6d, 0x0c, 0x6e, 0x9d, 0x78, 0x45, 0x6f, 0x71,
  0x6b, 0x5e, 0x1b, 0x4c, 0x05, 0x63, 0x6e, 0x63, 0x64, 0x23, 0x15, 0x3c,
  0x32, 0x9c, 0xea, 0x90, 0x8b, 0xa6, 0x3a, 0xf0, 0xe3, 0xd8, 0x9f, 0x34,
  0xa5, 0x1f, 0xa5, 0xf2, 0xe3, 0xb6, 0xff, 0x7c, 0xa5, 0x51, 0xac, 0xd3,
  0x7a, 0x6e, 0x70, 0x42, 0x40, 0x8f, 0xb1, 0x63, 0x99, 0x6e, 0xd5, 0x74,
  0x9d, 0x11, 0x48, 0x76, 0xe2, 0xd8, 0xb6, 0x4b, 0x73, 0xee, 0xd9, 0x24,
  0xd3, 0xd0, 0xd5, 0x4b, 0xb6, 0x19, 0x9b, 0x4d, 0x67, 0x02, 0x41, 0xaa,
  0x1e, 0x78, 0xa3, 0xdd, 0x81, 0x19, 0xd1, 0x9d, 0xed, 0x8a, 0xf3, 0xb6,
  0x73, 0x71, 0x35, 0x6b, 0x9c, 0xbc, 0x1a, 0xf9, 0x6d, 0xf8, 0x73, 0xde,
  0xbb, 0x1e, 0x1f, 0x5c, 0x8f, 0xe0, 0x5b, 0x07, 0x1f, 0xdb, 0x6f, 0xba,
  0xed, 0x37, 0xf0, 0xd1, 0xdd, 0x28, 0x7f, 0x1a, 0xfe, 0x89, 0x0d, 0x9d,
  0x57, 0x76, 0xa7, 0x7f, 0x7d, 0xd0, 0x6e, 0x9f, 0xd4, 0x8f, 0xcf, 0x67,
  0xef, 0x4e, 0x76, 0xb0, 0xbb, 0xe3, 0x36, 0xae, 0xde, 0x8e, 0x1b, 0xd7,
  0x9b, 0xbf, 0x4d, 0xec, 0x23, 0x7b, 0x6c, 0x4d, 0xae, 0xdb, 0x6f, 0xde,
  0x5d, 0xdd, 0xdd, 0x4c, 0xae, 0x47, 0xbd, 0x77, 0x1b, 0xe3, 0xf7, 0x9b,
  0x6f, 0x7b, 0xef, 0xdf, 0x1d, 0xde, 0xd2, 0xdf, 0x8f, 0x5e, 0xbf, 0xef,
  0xcf, 0x00, 0x61, 0xdf, 0xef, 0x5d, 0x5f, 0x75, 0xde, 0x76, 0x46, 0xef,
  0x3b, 0xd6, 0xc1, 0x7c, 0xe0, 0x9e, 0x77, 0x5e, 0xb5, 0x07, 0xed, 0x4d,
  0x8b, 0xd2, 0x51, 0xff, 0xaa, 0x33, 0x3d, 0x3e, 0xb9, 0x18, 0x39, 0xce,
  0xb8, 0xf7, 0xfe, 0xbc, 0x6f, 0x75, 0x9f, 0x9d, 0x5e, 0x1f, 0xb5, 0x9d,
  0xf1, 0xf9, 0xeb, 0xab, 0xc6, 0xed, 0xab, 0x93, 0xee, 0xbe, 0x75, 0xf3,
  0xfa, 0x66, 0x67, 0x7f, 0xab, 0xfe, 0xeb, 0xaf, 0x67, 0xf6, 0x85, 0xe3,
  0xf5, 0xef, 0x3e, 0xb7, 0x47, 0xdd, 0xd9, 0xf3, 0x45, 0xd4, 0x1f, 0x1f,
  0xdf, 0x79, 0xf5, 0xb7, 0xfe, 0xa7, 0xe3, 0xc5, 0x19, 0xfc, 0xbb, 0xbc,
  0x2c, 0x0f, 0x7a, 0x1b, 0xd1, 0xf5, 0x9b, 0xe3, 0xb7, 0x9b, 0xd1, 0x6f,
  0xcf, 0x82, 0xce, 0xfe, 0xfe, 0xdd, 0x64, 0x70, 0x59, 0x9f, 0xd8, 0xb7,
  0xc3, 0xf8, 0xf9, 0x56, 0x1c, 0xdc, 0x8c, 0xa6, 0xef, 0xff, 0x7c, 0xf6,
  0x7a, 0x5c, 0xbf, 0xa0, 0xe6, 0xcd, 0xb8, 0xbc, 0xf8, 0xbc, 0x78, 0x3e,
  0xee, 0x1f, 0xdd, 0x9d, 0xbb, 0xe6, 0xfc, 0xfc, 0xdc, 0xfa, 0x3c, 0x29,
  0xbb, 0xe6, 0x6f, 0x17, 0x7d, 0xd7, 0x0c, 0x37, 0xae, 0xed, 0x76, 0xbd,
  0xdc, 0xdd, 0x6c, 0x6f, 0xc7, 0xe1, 0x55, 0xd7, 0xdb, 0xdf, 0xfa, 0xd4,
  0x7b, 0xde, 0xe9, 0x6c, 0xf8, 0x83, 0x3f, 0x37, 0x5f, 0xdd, 0xee, 0xbc,
  0xba, 0xde, 0x79, 0x33, 0x78, 0xd3, 0xee, 0x6d, 0x77, 0xae, 0xcd, 0x9b,
  0xde, 0x9b, 0xf6, 0x70, 0x7b, 0x30, 0x1e, 0x9f, 0x9c, 0xf4, 0x0f, 0xed,
  0xf6, 0xe7, 0xb0, 0x7d, 0x31, 0x6b, 0xcf, 0x0f, 0xae, 0xdb, 0x47, 0xe5,
  0x93, 0x83, 0xb3, 0xc6, 0x46, 0xef, 0x66, 0x6b, 0x74, 0xb6, 0x33, 0xeb,
  0x44, 0x07, 0xed, 0x37, 0x9d, 0xc6, 0xe8, 0x75, 0x79, 0x62, 0xbe, 0xf7,
  0xbb, 0x5b, 0xa3, 0xe3, 0x1d, 0xe7, 0xf2, 0xc6, 0x6c, 0x1f, 0x77, 0x5e,
  0x47, 0xce, 0xd5, 0xe4, 0xe8, 0xba, 0xd1, 0x6e, 0x9f, 0x5e, 0xd0, 0xc3,
  0xee, 0x96, 0x79, 0xb2, 0x69, 0xbd, 0x03, 0xf9, 0x5f, 0xff, 0x4e, 0x7f,
  0x2d, 0xb7, 0x67, 0x17, 0x0d, 0xd7, 0xfa, 0x8d, 0xf6, 0x8f, 0x6e, 0xfa,
  0x4c, 0x3b, 0x07, 0xee, 0x61, 0xff, 0xb6, 0x37, 0x7d, 0x33, 0xe9, 0x76,
  0x4b, 0x06, 0x18, 0x6e, 0x35, 0xa4, 0x01, 0x35, 0xe3, 0x7c, 0x78, 0x4e,
  0x3d, 0x0f, 0x43, 0x6e, 0x63, 0xc9, 0x70, 0x65, 0xd0, 0x60, 0x11, 0x11,
  0x52, 0x49, 0xd5, 0xa6, 0x96, 0x1f, 0x9a, 0x1c, 0x05, 0x08, 0xd0, 0x10,
  0xed, 0x90, 0x23, 0xfd, 0x9b, 0x65, 0x18, 0xc2, 0x13, 0x0c, 0x31, 0x3d,
  0x9b, 0xe8, 0xd2, 0xb7, 0x30, 0xe8, 0xd9, 0xf4, 0xce, 0xb1, 0x68, 0x35,
  0x70, 0xe6, 0xd4, 0xad, 0x32, 0x12, 0xcd, 0x86, 0xc1, 0x08, 0xe3, 0x68,
  0xec, 0x4b, 0xea, 0x8c, 0xa6, 0x07, 0xe6, 0xc8, 0x47, 0x91, 0x2d, 0xf6,
  0x27, 0xd3, 0xa2, 0x10, 0xca, 0xc1, 0x17, 0x27, 0xf8, 0xc9, 0x9d, 0x12,
  0x92, 0xeb, 0x60, 0x3a, 0x1a, 0x3a, 0x73, 0x70, 0x89, 0xa1, 0xe3, 0x39,
  0x31, 0x25, 0x1b, 0x11, 0x9b, 0x25, 0x70, 0x84, 0x1f, 0xff, 0x96, 0x24,
  0x6f, 0xe9, 0x62, 0x18, 0x9a, 0x13, 0x1a, 0x3d, 0x9a, 0xa2, 0xe0, 0x69,
  0x18, 0xfa, 0x13, 0xf9, 0x7d, 0x29, 0xdc, 0xb1, 0x71, 0xf0, 0x23, 0xf6,
  0xbf, 0x04, 0xf3, 0xc0, 0xa4, 0xf4, 0xd3, 0x34, 0x70, 0x7d, 0xd3, 0x96,
  0x42, 0x5d, 0x11, 0xfa, 0x94, 0xec, 0x13, 0x72, 0xc7, 0x5e, 0x4e, 0x45,
  0xc2, 0xe5, 0x37, 0x65, 0xc0, 0xc8, 0x04, 0xa1, 0xcd, 0xed, 0x6c, 0x78,
  0xa9, 0x72, 0xcc, 0x0d, 0x99, 0x72, 0x0a, 0x52, 0xb4, 0x0c, 0x66, 0xfc,
  0x99, 0x45, 0x7d, 0xce, 0x71, 0x0c, 0x0a, 0xfd, 0x32, 0xb7, 0x09, 0x1f,
  0x22, 0xbe, 0x15, 0x70, 0xcc, 0xf3, 0xde, 0x46, 0x92, 0xf7, 0x12, 0x39,
  0x3d, 0x97, 0x86, 0xf7, 0x13, 0x65, 0xc5, 0x4c, 0x85, 0xfc, 0x14, 0x84,
  0x60, 0x2f, 0x74, 0xf6, 0x15, 0xe3, 0x66, 0x04, 0x55, 0xc4, 0x44, 0x3a,
  0x30, 0xaf, 0x5d, 0xb8, 0x4c, 0x94, 0xfa, 0x25, 0x9d, 0x72, 0x66, 0xf4,
  0x02, 0x59, 0x71, 0xc8, 0x74, 0x06, 0xcf, 0x92, 0x09, 0x3c, 0x56, 0xb9,
  0x5b, 0x3b, 0x3f, 0xab, 0x5c, 0x6f, 0x37, 0x7e, 0x16, 0xae, 0xa7, 0x12,
  0x50, 0x6a, 0xb3, 0x8d, 0x46, 0xa3, 0x21, 0xcd, 0x49, 0x96, 0x5e, 0xcf,
  0x53, 0xd6, 0x07, 0xcf, 0xf0, 0x67, 0x97, 0xd4, 0x7f, 0x21, 0xaf, 0x42,
  0xba, 0x20, 0xbf, 0xd4, 0x55, 0xd0, 0x2a, 0x1b, 0x52, 0x01, 0xdf, 0xda,
  0xfe, 0xed, 0xb9, 0x3d, 0x60, 0xe0, 0x1d, 0x77, 0x4a, 0xf3, 0xe0, 0x52,
  0x7a, 0x8f, 0xc7, 0x08, 0x4d, 0xdb, 0x99, 0x46, 0x50, 0x1d, 0x36, 0x7e,
  0x16, 0x4c, 0x8a, 0x22, 0x67, 0x73, 0x5b, 0x0a, 0x3d, 0x4d, 0x52, 0x6a,
  0x9b, 0xe2, 0xe9, 0x51, 0x00, 0x95, 0xf1, 0x66, 0xc4, 0x0c, 0xd9, 0x0c,
  0x13, 0x87, 0x16, 0x80, 0x32, 0xf7, 0xa5, 0x65, 0x04, 0x84, 0x9c, 0xd4,
  0xa9, 0x19, 0xb2, 0x10, 0x5a, 0xe3, 0x67, 0xa8, 0x5e, 0xe2, 0x10, 0x4a,
  0x80, 0x21, 0x94, 0x08, 0x50, 0x80, 0xf9, 0xb1, 0x19, 0x53, 0xbd, 0x61,
  0xd3, 0x91, 0xb1, 0x2b, 0x1d, 0x16, 0x04, 0x5a, 0x0c, 0xb6, 0xb5, 0x93,
  0x02, 0xc2, 0xdf, 0xbd, 0x3a, 0xab, 0x5f, 0x58, 0x61, 0x6d, 0x85, 0x4e,
  0x10, 0xc3, 0x37, 0x67, 0x48, 0x74, 0xac, 0xaf, 0xa1, 0xe2, 0xff, 0xfd,
  0xec, 0xf4, 0x28, 0x8e, 0x83, 0x2b, 0xfa, 0xe7, 0x94, 0x46, 0x31, 0x69,
  0xb5, 0x5a, 0x44, 0xc3, 0xc0, 0x08, 0xbc, 0x53, 0x5b, 0x33, 0x38, 0x4b,
  0x79, 0x20, 0x32, 0x9c, 0x7a, 0x16, 0x4e, 0x9a, 0xe8, 0x86, 0x64, 0x3a,
  0x0e, 0x17, 0xc0, 0x4e, 0x48, 0xe3, 0x69, 0xe8, 0x11, 0x0f, 0x6c, 0xaf,
  0x6d, 0x61, 0xd1, 0xf8, 0xfb, 0xc5, 0xe0, 0x13, 0x44, 0x25, 0x5d, 0x3b,
  0x8b, 0xe6, 0x13, 0x77, 0xb3, 0x86, 0xa4, 0xfa, 0xfd, 0xcb, 0xda, 0x4e,
  0xad, 0xa1, 0x21, 0x8f, 0xc4, 0x32, 0x63, 0x6b, 0x4c, 0x74, 0x0a, 0x84,
  0x1e, 0xbe, 0x89, 0xd2, 0xd6, 0x77, 0x50, 0x72, 0xac, 0xd0, 0x8f, 0xfc,
  0x61, 0x2c, 0x89, 0xad, 0x24, 0x34, 0x0e, 0xfd, 0x19, 0xa3, 0x70, 0x10,
  0x86, 0x7e, 0xa8, 0x6b, 0x6c, 0x25, 0x35, 0x80, 0x46, 0xa8, 0xaf, 0x88,
  0xed, 0x83, 0x02, 0x3d, 0x3f, 0x26, 0xd1, 0x34, 0x08, 0xfc, 0x30, 0xce,
  0xc9, 0xab, 0xa6, 0xf1, 0xca, 0xff, 0x41, 0xaa, 0x3d, 0x91, 0xde, 0x64,
  0x71, 0x0d, 0xf5, 0x0b, 0xcf, 0x22, 0x82, 0xcb, 0x19, 0xf8, 0x8b, 0x3f,
  0x03, 0x2f, 0xb2, 0x98, 0x55, 0xd5, 0x02, 0x33, 0x1e, 0x7b, 0x60, 0x21,
  0x4b, 0xb8, 0x23, 0xaa, 0x9b, 0x19, 0x4c, 0xdb, 0xb7, 0xa6, 0x98, 0x07,
  0x6a, 0x23, 0x1a, 0x1f, 0xf0, 0x94, 0xd0, 0x59, 0x1c, 0xdb, 0x00, 0xc5,
  0x71, 0x13, 0x4c, 0x6b, 0x25, 0x26, 0xa4, 0x3e, 0xb0, 0x20, 0x81, 0x9c,
  0x20, 0x2a, 0xa8, 0x50, 0xd1, 0x01, 0xd1, 0x13, 0xba, 0xd0, 0xcd, 0x30,
  0x34, 0x17, 0x15, 0x02, 0x06, 0x2c, 0x2c, 0x40, 0xd0, 0x62, 0xed, 0x35,
  0x84, 0xd3, 0x25, 0x96, 0x0e, 0x65, 0xed, 0x20, 0xb1, 0x93, 0x3b, 0x70,
  0x8d, 0x39, 0x98, 0x90, 0xf9, 0x01, 0x70, 0x3f, 0xee, 0xb2, 0xe7, 0x05,
  0x3c, 0x0f, 0xf8, 0x33, 0x07, 0x12, 0xc4, 0x74, 0x7d, 0x4e, 0xf6, 0x08,
  0x8c, 0xf0, 0x92, 0x54, 0x37, 0x48, 0x93, 0x3d, 0xbf, 0xe0, 0xcf, 0xf8,
  0xd8, 0x30, 0x84, 0x60, 0x13, 0x46, 0x7f, 0xfc, 0x01, 0xc9, 0xbd, 0x99,
  0xd2, 0x29, 0xb5, 0x85, 0xf4, 0x41, 0x3f, 0x05, 0xf6, 0x1a, 0x83, 0xfe,
  0x6a, 0x7f, 0x22, 0x1c, 0xf4, 0x7e, 0xe0, 0xc3, 0xb2, 0xb6, 0x70, 0xea,
  0x79, 0x10, 0x11, 0x11, 0xc7, 0x74, 0x23, 0x9a, 0x76, 0x80, 0xcd, 0x8d,
  0x41, 0xa7, 0xd0, 0xe1, 0x4d, 0x5d, 0x97, 0x0f, 0x98, 0x1b, 0xa8, 0x16,
  0x80, 0x0b, 0xfa, 0xe8, 0x58, 0x00, 0xc5, 0x86, 0xf9, 0x23, 0xe4, 0x7d,
  0xcd, 0x84, 0x03, 0x1d, 0x5a, 0x0c, 0xe9, 0x32, 0xd9, 0x01, 0xe3, 0x70,
  0x2a, 0x83, 0x85, 0x33, 0xd4, 0x9f, 0x00, 0x20, 0xc4, 0x90, 0x28, 0x36,
  0x3d, 0x0b, 0x1d, 0x95, 0xdb, 0xac, 0x21, 0x44, 0xb3, 0x9b, 0x0a, 0x33,
  0x1e, 0x9b, 0xe8, 0x92, 0x48, 0x6c, 0x97, 0xd7, 0x0c, 0x24, 0x9d, 0xaf,
  0xf9, 0xc9, 0x9c, 0x77, 0x07, 0xfa, 0xbc, 0x62, 0x1b, 0x89, 0x23, 0x24,
  0xac, 0x18, 0x49, 0xc6, 0xc7, 0x80, 0x30, 0xaf, 0x81, 0xf6, 0xed, 0x45,
  0x0f, 0x83, 0x08, 0xc4, 0x01, 0xb2, 0x9d, 0x76, 0x13, 0xb4, 0x36, 0x8d,
  0x47, 0x76, 0xcd, 0xa8, 0xb1, 0x80, 0x52, 0x13, 0x01, 0x0d, 0x86, 0xd6,
  0x30, 0xa6, 0x69, 0xbb, 0x29, 0xb4, 0x5d, 0x83, 0xca, 0xdd, 0xc5, 0xbc,
  0x03, 0x54, 0x61, 0x06, 0xf1, 0x34, 0xaa, 0x10, 0xa4, 0x1f, 0x05, 0xbe,
  0x17, 0xd1, 0x3e, 0x54, 0x62, 0x86, 0x02, 0x0e, 0xb3, 0xc5, 0x49, 0x70,
  0x7d, 0xd4, 0x5c, 0xea, 0x8d, 0xe2, 0x31, 0x8b, 0x44, 0x0d, 0x83, 0xcd,
  0xae, 0x50, 0x29, 0x59, 0x54, 0x01, 0x21, 0xe0, 0xa5, 0xd8, 0x55, 0xb2,
  0xd1, 0xd8, 0x19, 0xc6, 0xba, 0x91, 0x8e, 0x2b, 0x5c, 0xfb, 0xe1, 0x41,
  0x0a, 0x6d, 0xfd, 0x1c, 0xd9, 0x5a, 0x45, 0x4b, 0x24, 0x8c, 0x92, 0x47,
  0x63, 0xd0, 0xb4, 0x54, 0x65, 0x30, 0x2a, 0xf8, 0x2b, 0xc4, 0xf3, 0x48,
  0x55, 0xdc, 0x21, 0x04, 0xe7, 0x7d, 0x58, 0xa1, 0xa4, 0xe2, 0x44, 0xbc,
  0x14, 0x56, 0xd6, 0x58, 0x84, 0xc2, 0xd4, 0x56, 0x93, 0x11, 0xfa, 0x4f,
  0x88, 0x40, 0xcc, 0x27, 0x3a, 0x72, 0x01, 0x6e, 0x83, 0x5b, 0x32, 0x29,
  0x96, 0x41, 0xee, 0x33, 0x02, 0x0a, 0x78, 0x54, 0xd7, 0x8c, 0xb4, 0x15,
  0x79, 0x28, 0xb7, 0x08, 0x1b, 0x6a, 0x42, 0xe3, 0xb1, 0x6f, 0x73, 0x98,
  0x57, 0x07, 0x7d, 0xcd, 0x78, 0xa9, 0xbd, 0xd4, 0x9a, 0x9a, 0xaa, 0x4f,
  0xe4, 0x6c, 0x09, 0x59, 0x7b, 0xaa, 0x82, 0xb0, 0x26, 0xbe, 0x6d, 0x74,
  0x7d, 0x75, 0xdc, 0xf5, 0x27, 0xa0, 0x69, 0x0c, 0x22, 0x18, 0x20, 0xca,
  0x5a, 0x4b, 0x2b, 0x17, 0xf4, 0xa5, 0x2c, 0x33, 0xdf, 0x57, 0x54, 0x93,
  0xd6, 0x9d, 0x8a, 0xa7, 0x28, 0x1e, 0x08, 0x81, 0x38, 0x1b, 0x63, 0x75,
  0x89, 0xac, 0x42, 0xd6, 0x7c, 0x8f, 0x99, 0x34, 0x5a, 0x20, 0xb5, 0xc6,
  0xa6, 0x37, 0x42, 0xc7, 0x14, 0x2e, 0xa1, 0x02, 0x56, 0x50, 0x7a, 0x46,
  0x56, 0x91, 0x4b, 0x62, 0x49, 0x84, 0x9a, 0x1d, 0x22, 0xa0, 0x9e, 0x02,
  0xcf, 0x28, 0xd5, 0x60, 0x55, 0x5a, 0x06, 0xa2, 0xe8, 0xd0, 0xe9, 0xa4,
  0x32, 0x68, 0x11, 0xf5, 0xec, 0x84, 0x67, 0xa1, 0xfa, 0xaf, 0x1b, 0x20,
  0x4f, 0x9e, 0x29, 0x5a, 0xb1, 0x97, 0x5e, 0x1c, 0xa2, 0x43, 0xa4, 0x1a,
  0xca, 0x8d, 0x1f, 0x0b, 0xc9, 0x1d, 0x51, 0xb4, 0x78, 0x5d, 0xeb, 0xfa,
  0xb0, 0x4c, 0x87, 0x55, 0x04, 0x86, 0x2f, 0xad, 0x42, 0x34, 0x33, 0x08,
  0x5c, 0x87, 0x27, 0xa1, 0xfa, 0xbc, 0x3a, 0x9b, 0xcd, 0xaa, 0x58, 0x65,
  0x54, 0x61, 0x64, 0xb1, 0x39, 0xa8, 0xad, 0x9b, 0x5a, 0x60, 0x64, 0x96,
  0x0e, 0x15, 0xfc, 0x3f, 0x62, 0x55, 0xdc, 0x52, 0xf4, 0x61, 0x2e, 0x9c,
  0x06, 0x42, 0x63, 0x75, 0x1c, 0x4e, 0x61, 0xa5, 0x29, 0x3c, 0x7d, 0x9a,
  0x1d, 0x5b, 0x89, 0x60, 0x7b, 0x6a, 0x00, 0xcb, 0x00, 0x99, 0x03, 0xcc,
  0x4e, 0x05, 0x0c, 0x42, 0x31, 0xac, 0xf0, 0x27, 0xe5, 0xcd, 0x64, 0xcd,
  0xcd, 0xb4, 0x42, 0x64, 0x5c, 0xcb, 0x84, 0x70, 0x1e, 0x60, 0x82, 0x69,
  0x34, 0xd6, 0xef, 0x01, 0xba, 0x89, 0x18, 0x1c, 0xbb, 0x29, 0x88, 0x70,
  0xf4, 0xa6, 0xa0, 0x22, 0x89, 0x34, 0xe5, 0x97, 0x07, 0xc5, 0xf6, 0x9e,
  0x64, 0x84, 0x91, 0x9d, 0x81, 0x12, 0xd7, 0x92, 0x61, 0x73, 0x71, 0x4d,
  0x59, 0xaa, 0xf1, 0x64, 0x28, 0x50, 0x22, 0xe1, 0x36, 0xb9, 0x94, 0xc5,
  0xc4, 0xa0, 0xd6, 0x06, 0xac, 0x02, 0x38, 0x74, 0x5c, 0x7a, 0x2d, 0xd6,
  0x79, 0xba, 0x58, 0x5e, 0xa2, 0xbd, 0x51, 0x5a, 0x21, 0x7c, 0x85, 0xc3,
  0x19, 0x63, 0xb9, 0x7c, 0xe2, 0xa2, 0x1f, 0x8a, 0xc0, 0xc8, 0x47, 0x1c,
  0x42, 0xa4, 0x87, 0x08, 0x8e, 0x95, 0x86, 0x36, 0x98, 0x42, 0x2d, 0xee,
  0x09, 0x63, 0x11, 0x5d, 0x35, 0xc7, 0xf3, 0x68, 0x78, 0xd4, 0x3f, 0x3b,
  0x05, 0xa0, 0xd2, 0x95, 0x80, 0x3f, 0x75, 0xa2, 0xb8, 0xc4, 0xc0, 0x20,
  0x12, 0x8b, 0x51, 0x8d, 0x1a, 0xd8, 0x21, 0x18, 0x54, 0x77, 0xec, 0xb8,
  0xb6, 0x2e, 0xd0, 0x0d, 0x65, 0x30, 0xbe, 0x0d, 0xc7, 0x87, 0x62, 0xdf,
  0xc5, 0x48, 0xec, 0x7b, 0x4d, 0xe4, 0x62, 0x6d, 0x08, 0x13, 0xd2, 0x94,
  0xf6, 0xc9, 0xd4, 0x8d, 0x9d, 0xc0, 0xa5, 0x19, 0xf3, 0xe2, 0x5d, 0x58,
  0x6c, 0x21, 0x0a, 0x6e, 0x2a, 0xa9, 0x28, 0x8e, 0xdd, 0xd2, 0xf8, 0xda,
  0x57, 0x2c, 0xb4, 0xb5, 0xb5, 0xac, 0x32, 0x24, 0x95, 0x51, 0x2c, 0xe4,
  0x0a, 0xf8, 0xc4, 0x66, 0xa0, 0x8d, 0x23, 0x0a, 0xea, 0xd8, 0xa2, 0xa5,
  0x7d, 0x72, 0x0a, 0xb8, 0x7d, 0xa1, 0x34, 0x4b, 0x36, 0x73, 0xd0, 0x50,
  0xb8, 0x9b, 0x30, 0xb7, 0xb7, 0xa6, 0xcb, 0x2a, 0x1b, 0xad, 0xbe, 0x9e,
  0x4b, 0xc4, 0x51, 0x99, 0xe4, 0xca, 0x2a, 0xd2, 0x1c, 0x7f, 0xc8, 0x2a,
  0x8e, 0x9b, 0xc8, 0x7a, 0x95, 0x71, 0x3c, 0x75, 0x8c, 0xc9, 0x2d, 0x6a,
  0xa3, 0x68, 0x0c, 0xde, 0x93, 0x1d, 0xa3, 0xcb, 0x0c, 0x72, 0xfd, 0x18,
  0x1c, 0x4f, 0x1d, 0x03, 0x9f, 0x99, 0x84, 0xf0, 0xcf, 0xb2, 0xd0, 0x65,
  0x37, 0x0a, 0x5e, 0x80, 0x68, 0xdc, 0xae, 0xab, 0xb2, 0x4b, 0xcb, 0x02,
  0x32, 0x2d, 0x70, 0xc0, 0x54, 0x11, 0x49, 0x2f, 0x94, 0x09, 0xe6, 0xc0,
  0xa5, 0xb6, 0x52, 0xc3, 0x25, 0x7d, 0xb8, 0xd5, 0xcf, 0x31, 0x37, 0x1b,
  0x6b, 0x67, 0x21, 0x31, 0xd4, 0x79, 0x44, 0xe6, 0x1d, 0x5d, 0x25, 0x2d,
  0xd9, 0x97, 0x95, 0x17, 0xe9, 0x41, 0x33, 0x7c, 0xac, 0x1d, 0x4a, 0xa2,
  0xca, 0xa1, 0x12, 0xf7, 0xc7, 0xf8, 0x78, 0xe9, 0x47, 0xf1, 0x65, 0xe8,
  0x5b, 0x34, 0x8a, 0x64, 0x72, 0x95, 0x25, 0x5c, 0xa6, 0x80, 0x4b, 0xc3,
  0x37, 0xef, 0x26, 0x4f, 0x70, 0x8a, 0x8d, 0x24, 0xe3, 0x98, 0x2e, 0x85,
  0x30, 0xab, 0x1d, 0x5c, 0x5d, 0x5d, 0x5c, 0x7d, 0xd0, 0xca, 0x1c, 0xa8,
  0xac, 0x7d, 0x6c, 0x12, 0xad, 0x5c, 0x54, 0x09, 0xaa, 0x45, 0x06, 0x86,
  0x9a, 0x9a, 0xf0, 0xf6, 0x4b, 0xb0, 0x51, 0x66, 0xa8, 0xb5, 0x3b, 0xb4,
  0x6a, 0x43, 0xee, 0x8e, 0x29, 0x6c, 0xf3, 0xa8, 0xc5, 0x01, 0x0d, 0x65,
  0x9d, 0x31, 0x14, 0xa5, 0x97, 0x88, 0x7d, 0xb2, 0x12, 0x4b, 0x62, 0xbf,
  0xec, 0x17, 0xc2, 0xd1, 0xb9, 0x37, 0x41, 0xb4, 0x37, 0x92, 0x75, 0x08,
  0x0f, 0x9e, 0x35, 0x48, 0x0d, 0xba, 0x76, 0x79, 0xdd, 0x87, 0x4e, 0xb1,
  0x68, 0xab, 0x24, 0xd8, 0x95, 0x15, 0x62, 0x33, 0xd4, 0x7d, 0x3c, 0x61,
  0xdb, 0xbe, 0x67, 0x41, 0x56, 0xbd, 0x55, 0x96, 0x24, 0xb0, 0xcc, 0x14,
  0x1c, 0xab, 0xb3, 0xc8, 0x4d, 0x97, 0x88, 0xb0, 0xcb, 0x76, 0x57, 0x70,
  0xf8, 0x65, 0x80, 0xb4, 0xa5, 0x25, 0xbd, 0xfe, 0x41, 0xa8, 0x37, 0xb1,
  0x94, 0x75, 0xa3, 0x8b, 0x01, 0xe8, 0x9c, 0x5a, 0x50, 0xa1, 0x4d, 0x4c,
  0x10, 0x47, 0x09, 0x11, 0xc5, 0x43, 0xc9, 0xc8, 0x90, 0x94, 0x81, 0x7c,
  0x1d, 0xc5, 0x2f, 0x2b, 0x51, 0x10, 0x13, 0xb1, 0x65, 0x1d, 0x2d, 0xb0,
  0x32, 0x1e, 0x86, 0x71, 0x1e, 0x51, 0x76, 0x8d, 0x90, 0xe4, 0xc8, 0xcc,
  0xd2, 0xe8, 0xe1, 0x3b, 0xcc, 0x80, 0xc5, 0xfe, 0x0a, 0x51, 0x46, 0xfc,
  0xd0, 0xf8, 0x58, 0x21, 0xcb, 0x42, 0xcf, 0xd9, 0xc7, 0x45, 0xef, 0x1b,
  0x0c, 0x84, 0xf3, 0xc8, 0x83, 0x3f, 0x8a, 0xa9, 0xc5, 0x16, 0x22, 0x6a,
  0x32, 0x90, 0x70, 0x29, 0x4c, 0x4e, 0xd1, 0x2a, 0x89, 0x1e, 0x4b, 0x4e,
  0x19, 0x22, 0x22, 0x5f, 0x65, 0xc9, 0x70, 0x38, 0x49, 0x28, 0x35, 0x18,
  0x99, 0xef, 0x40, 0x1b, 0xb2, 0x62, 0xfe, 0x3a, 0x75, 0x2c, 0xaf, 0x50,
  0x93, 0x68, 0xdc, 0xca, 0x89, 0xb4, 0x26, 0x76, 0x36, 0x24, 0x20, 0x44,
  0x03, 0x80, 0xa9, 0xeb, 0x2f, 0x9b, 0xff, 0xa9, 0xe9, 0x1f, 0xfe, 0x5b,
  0xfb, 0x58, 0x36, 0x8c, 0x97, 0xff, 0xaa, 0x33, 0xa3, 0x4c, 0xe3, 0xe3,
  0x87, 0x8d, 0x8f, 0x0a, 0x8e, 0x20, 0x5c, 0xd7, 0x6b, 0xbf, 0x18, 0xff,
  0xa9, 0x31, 0xa4, 0x35, 0x18, 0x58, 0x40, 0xf2, 0x8d, 0x2f, 0x86, 0xf7,
  0x04, 0x38, 0x4e, 0x76, 0xbb, 0x94, 0xb5, 0x55, 0xca, 0xb0, 0xc2, 0xe1,
  0x43, 0xde, 0xd1, 0x78, 0x82, 0x2d, 0x4b, 0xe8, 0xb2, 0x56, 0x83, 0x65,
  0xce, 0x3c, 0x5e, 0xb1, 0xd9, 0xc3, 0xdd, 0xbb, 0x0f, 0x4e, 0x91, 0x96,
  0x54, 0xf9, 0x62, 0x4a, 0xee, 0xdb, 0x72, 0xf5, 0x89, 0x27, 0xa1, 0x38,
  0xb6, 0xd6, 0x07, 0xec, 0x2b, 0xdf, 0x97, 0x05, 0x8f, 0xed, 0xdc, 0x89,
  0x4e, 0xd9, 0x51, 0xb3, 0x5c, 0x33, 0x8a, 0xce, 0x45, 0x71, 0x10, 0xdf,
  0x4d, 0xd7, 0xe7, 0x7f, 0x89, 0xb6, 0x94, 0x08, 0xd0, 0x42, 0xf6, 0xfd,
  0x99, 0x87, 0x9f, 0xbc, 0x4a, 0xb8, 0x4f, 0x16, 0xc9, 0x25, 0x5b, 0x74,
  0x54, 0xd9, 0xde, 0x65, 0x09, 0x16, 0xcb, 0xa1, 0x05, 0xc3, 0x09, 0xbb,
  0x2f, 0x6b, 0x2f, 0x25, 0x00, 0x2c, 0xfb, 0x10, 0x57, 0x8d, 0x83, 0x99,
  0x11, 0x2e, 0xf9, 0x04, 0x33, 0x03, 0x30, 0x3b, 0xb0, 0x87, 0x42, 0xfc,
  0x28, 0x86, 0x7c, 0x66, 0x4e, 0x43, 0x22, 0x83, 0x12, 0x26, 0x9c, 0x0c,
  0x44, 0x14, 0xa4, 0x2f, 0x6d, 0x56, 0x08, 0x09, 0xaf, 0x59, 0xed, 0xab,
  0x50, 0x99, 0x44, 0xbb, 0xe7, 0x4c, 0x46, 0x04, 0x26, 0xde, 0xd2, 0x4a,
  0x65, 0x39, 0xf3, 0xd2, 0x4b, 0x1c, 0xb6, 0x55, 0x62, 0xb3, 0x2e, 0x97,
  0x9e, 0xfe, 0x61, 0x0d, 0xe0, 0x01, 0x42, 0x00, 0xad, 0x79, 0xfe, 0x0c,
  0x01, 0x34, 0xc2, 0x86, 0x6a, 0x69, 0x13, 0x73, 0x2e, 0xce, 0xd1, 0x71,
  0x23, 0x77, 0x97, 0xe0, 0xb3, 0xd8, 0x5f, 0x96, 0x0d, 0xec, 0x20, 0xda,
  0x9c, 0xc6, 0xfe, 0x6e, 0xb2, 0x79, 0xcc, 0x0f, 0x4c, 0x35, 0x52, 0x7f,
  0x51, 0x2a, 0x14, 0x2a, 0xc8, 0xc8, 0xc5, 0xe2, 0xfd, 0x8c, 0x7a, 0x53,
  0xd0, 0x38, 0x0f, 0x59, 0xaa, 0x64, 0xf1, 0x40, 0x5b, 0x18, 0xcf, 0xd4,
  0x4d, 0x25, 0xe9, 0x66, 0xac, 0x02, 0x81, 0xd4, 0xd8, 0x64, 0x72, 0xe2,
  0x1c, 0xcd, 0x75, 0x12, 0x34, 0x84, 0xcb, 0x20, 0x72, 0x40, 0x65, 0x31,
  0xe3, 0x44, 0xc7, 0x78, 0x2c, 0x8b, 0x2c, 0x71, 0x25, 0xa7, 0x3e, 0xc6,
  0x61, 0x33, 0x32, 0xd5, 0xf6, 0xf0, 0xcc, 0xee, 0x85, 0xb0, 0x8a, 0xbd,
  0x3a, 0x7b, 0x4a, 0x37, 0x19, 0x04, 0xc6, 0xba, 0x34, 0xc1, 0xb8, 0xca,
  0x1b, 0x56, 0x76, 0xbb, 0x28, 0xd9, 0xec, 0x1c, 0xf8, 0xf6, 0x42, 0xd9,
  0x2b, 0x8d, 0x3a, 0x8b, 0xae, 0xf4, 0x1d, 0xbd, 0x64, 0x4d, 0xc0, 0xac,
  0x45, 0x58, 0x7b, 0x81, 0x41, 0x2d, 0x8b, 0x16, 0xd2, 0x89, 0x0f, 0xa9,
  0x91, 0x4d, 0x9a, 0xba, 0x05, 0x1b, 0x17, 0xc9, 0x66, 0x8e, 0x13, 0x61,
  0x8d, 0xf3, 0x75, 0x02, 0xc0, 0x1b, 0x31, 0xdf, 0x3a, 0xfb, 0x82, 0x3a,
  0xe1, 0x1f, 0x11, 0x40, 0x6a, 0x3d, 0x32, 0x18, 0x3c, 0xc2, 0x7e, 0x24,
  0xa8, 0x04, 0x90, 0xcf, 0x45, 0x42, 0x92, 0xd1, 0x29, 0x27, 0xa8, 0x04,
  0x65, 0xbd, 0xa0, 0x96, 0xe3, 0x9b, 0xba, 0x91, 0xf2, 0x37, 0x8a, 0xe8,
  0x41, 0xf1, 0x2b, 0x9b, 0x32, 0x67, 0x7d, 0x8c, 0x60, 0x38, 0x64, 0x22,
  0x17, 0xfe, 0x58, 0x28, 0x16, 0x88, 0xf3, 0x31, 0xcd, 0x0b, 0x45, 0xc0,
  0xaf, 0x97, 0x09, 0x16, 0x29, 0x1c, 0xfd, 0x1f, 0x90, 0x48, 0x3e, 0x92,
  0x45, 0x63, 0x7f, 0xc6, 0xb6, 0xa4, 0xe6, 0x31, 0x0f, 0x66, 0x77, 0x2c,
  0x61, 0x22, 0x63, 0x50, 0x98, 0x45, 0x6c, 0xf5, 0xa2, 0xc4, 0x35, 0xc8,
  0x84, 0x02, 0x7a, 0x29, 0x35, 0x8a, 0x95, 0x94, 0x15, 0xfa, 0xae, 0xdb,
  0xf7, 0x71, 0xfb, 0x30, 0xcb, 0x55, 0xda, 0xf3, 0x72, 0x65, 0x4f, 0x33,
  0xed, 0x91, 0x5f, 0x84, 0x00, 0x52, 0xa0, 0xa5, 0xc1, 0x4e, 0xe9, 0x30,
  0x5e, 0x31, 0x1a, 0xeb, 0x7a, 0xb9, 0xba, 0xeb, 0x8b, 0xe3, 0x21, 0x94,
  0x32, 0xa0, 0xcb, 0x87, 0x62, 0x42, 0x82, 0x12, 0xc0, 0x81, 0x8f, 0xdf,
  0x49, 0x99, 0x14, 0xc2, 0xc6, 0x4c, 0x06, 0x2a, 0xe8, 0x4d, 0x02, 0x9a,
  0x4e, 0x23, 0x15, 0x68, 0xa6, 0xa4, 0x40, 0x15, 0x2f, 0x43, 0xe4, 0xd3,
  0x67, 0x89, 0xe5, 0xa9, 0x95, 0x80, 0x82, 0x5b, 0xf6, 0x51, 0x26, 0xa5,
  0x60, 0xbe, 0x12, 0x92, 0xf3, 0x8a, 0xff, 0x67, 0xe0, 0x32, 0x69, 0x2e,
  0x45, 0x12, 0xe9, 0x2e, 0x89, 0x04, 0xaa, 0x70, 0x33, 0xde, 0x94, 0x60,
  0xa8, 0x16, 0xc2, 0xb2, 0x31, 0xea, 0x2b, 0x65, 0xc2, 0x1f, 0x0e, 0x23,
  0x1a, 0xbf, 0xc3, 0x0e, 0x05, 0x90, 0xa7, 0xe9, 0x22, 0xc8, 0x23, 0xd6,
  0xb3, 0x3c, 0x19, 0xdf, 0x9b, 0xf8, 0xd3, 0x88, 0xfa, 0xd3, 0x78, 0x85,
  0xeb, 0x81, 0x87, 0xd1, 0x44, 0x6f, 0x7b, 0x5c, 0x32, 0xff, 0xfb, 0x1f,
  0x49, 0xdb, 0x5e, 0x10, 0x5d, 0x88, 0x8b, 0xb1, 0x69, 0xa8, 0xbd, 0x37,
  0x80, 0x81, 0x22, 0xca, 0x34, 0x01, 0x02, 0x17, 0x1b, 0xe7, 0xd6, 0x30,
  0xee, 0xff, 0xde, 0x24, 0xb0, 0x2c, 0xd3, 0xf4, 0x84, 0xa5, 0xd0, 0xc1,
  0xd3, 0x72, 0xf8, 0x94, 0x9a, 0x43, 0x9d, 0x3b, 0x36, 0xd6, 0x73, 0x15,
  0x82, 0x5b, 0x26, 0x99, 0xa2, 0x05, 0x00, 0x0a, 0x82, 0x24, 0xb4, 0xf2,
  0x9d, 0xb3, 0xdc, 0x2a, 0xc2, 0x35, 0x07, 0xd4, 0x15, 0xf0, 0x18, 0x06,
  0x53, 0x0c, 0xec, 0xc8, 0x04, 0x4d, 0x05, 0x93, 0x91, 0xcb, 0x54, 0x41,
  0x08, 0x9d, 0x19, 0x6c, 0x7d, 0xf8, 0xcc, 0x26, 0x7b, 0xc1, 0x1d, 0x58,
  0xf0, 0xa9, 0x3f, 0xa3, 0x61, 0xd7, 0x8c, 0xa8, 0x6e, 0x18, 0x6b, 0x32,
  0xb5, 0x40, 0x50, 0xa4, 0xa7, 0xd4, 0x10, 0x69, 0x15, 0xf5, 0x65, 0xba,
  0x6a, 0xfd, 0xb3, 0x4c, 0x34, 0x9b, 0x85, 0xe4, 0xb4, 0xb8, 0xe6, 0x40,
  0xb3, 0xd3, 0x15, 0x93, 0xa3, 0x35, 0x2c, 0x82, 0x41, 0xf3, 0xfb, 0x7c,
  0x83, 0x51, 0x4f, 0x49, 0xd2, 0x1a, 0x6e, 0xec, 0xc3, 0xca, 0x36, 0x30,
  0x47, 0x26, 0xdf, 0xd9, 0x4f, 0xfa, 0x96, 0xa2, 0x78, 0x45, 0xaa, 0x2d,
  0x7b, 0x7c, 0xf1, 0x90, 0x3d, 0xf7, 0x45, 0x98, 0x42, 0xa3, 0x81, 0x65,
  0x36, 0xee, 0x12, 0x83, 0xb5, 0x84, 0x6a, 0x3a, 0x88, 0xe9, 0x24, 0x92,
  0xbc, 0xa6, 0x47, 0xd4, 0xac, 0xb9, 0x42, 0x4a, 0x1e, 0x5b, 0xa4, 0xec,
  0x7e, 0xa9, 0x08, 0xe6, 0x34, 0xd7, 0x16, 0xc2, 0x2e, 0x9a, 0x15, 0x23,
  0x2b, 0xbc, 0x22, 0xdd, 0x40, 0x60, 0x47, 0x71, 0x0e, 0x74, 0x37, 0x76,
  0xe1, 0x03, 0x5c, 0xd8, 0x85, 0xcf, 0x72, 0x39, 0x6b, 0x1e, 0x88, 0xf9,
  0xc1, 0xf9, 0x28, 0xf6, 0x74, 0x5b, 0x72, 0x63, 0x5a, 0x39, 0xa4, 0x59,
  0xca, 0xfc, 0x85, 0x6e, 0x92, 0x10, 0xe2, 0xfe, 0x92, 0x3c, 0x32, 0xc7,
  0x31, 0xb2, 0x87, 0x67, 0x79, 0x11, 0xe6, 0x0b, 0xd2, 0xfb, 0x47, 0x2e,
  0xbf, 0x19, 0x70, 0xd1, 0x42, 0x1a, 0xb1, 0x56, 0xac, 0xa3, 0xa3, 0x99,
  0x13, 0x5b, 0x63, 0x5d, 0xd9, 0x2d, 0x64, 0xfb, 0x5c, 0x60, 0xb3, 0xb0,
  0x36, 0x9d, 0xc7, 0x5a, 0x33, 0xdf, 0x38, 0x8e, 0x27, 0x85, 0x8d, 0xee,
  0x72, 0xeb, 0xa7, 0x68, 0xb9, 0x0d, 0x2f, 0x8a, 0x2f, 0x35, 0xce, 0x8b,
  0xb1, 0x7d, 0xaf, 0x00, 0xdf, 0xf7, 0x86, 0xcb, 0xad, 0x8e, 0xe7, 0x14,
  0x30, 0x55, 0x80, 0x5d, 0xd0, 0x14, 0x04, 0xcb, 0x8d, 0xc1, 0xb8, 0xa0,
  0x71, 0x4c, 0xe7, 0x45, 0x23, 0xfb, 0x05, 0xe8, 0x36, 0x55, 0x1b, 0x85,
  0xcb, 0x28, 0x97, 0x07, 0x52, 0x2f, 0xcf, 0x38, 0x55, 0x7a, 0xd0, 0xb1,
  0x6c, 0x12, 0xb9, 0x55, 0xda, 0x3f, 0x65, 0x13, 0x81, 0x37, 0x2a, 0x50,
  0x55, 0x50, 0xd0, 0x38, 0x72, 0x0a, 0x14, 0x35, 0x98, 0x04, 0x7f, 0x8d,
  0x64, 0xf8, 0x11, 0x5c, 0xba, 0x73, 0xa9, 0x06, 0x45, 0x55, 0x40, 0xc9,
  0xae, 0x8b, 0x9a, 0x09, 0xd3, 0xad, 0x18, 0x7c, 0x3c, 0xf7, 0x6d, 0xb6,
  0xd5, 0x25, 0xbd, 0x12, 0x8b, 0xec, 0x57, 0x34, 0x4e, 0xa0, 0x2a, 0xb8,
  0x85, 0x94, 0xdd, 0x0e, 0x4d, 0xf4, 0x02, 0x65, 0x7b, 0x77, 0x90, 0x19,
  0x30, 0x7f, 0x83, 0x63, 0xdd, 0xc6, 0x7c, 0xc1, 0xd6, 0xbc, 0x22, 0xf0,
  0xaf, 0xdd, 0x9d, 0x5f, 0x3e, 0xa5, 0xfe, 0xa6, 0xe9, 0x7f, 0x41, 0x04,
  0x79, 0x15, 0x3d, 0x14, 0x9c, 0x4f, 0x88, 0x25, 0x4a, 0xb2, 0xb9, 0xf7,
  0x17, 0xec, 0xf7, 0xab, 0x47, 0x2f, 0xcb, 0xdb, 0xba, 0xfb, 0x07, 0xa7,
  0x07, 0xfd, 0x83, 0xe2, 0x8d, 0x5d, 0xae, 0xa2, 0x04, 0xdf, 0x28, 0xf4,
  0x2f, 0x28, 0xaf, 0x98, 0x1e, 0xd3, 0x9c, 0xf5, 0xbd, 0xfa, 0x6c, 0x65,
  0x8f, 0x5a, 0xc8, 0x8a, 0xc4, 0xf8, 0xba, 0x77, 0x71, 0x8e, 0x37, 0x2c,
  0xa0, 0x46, 0xc8, 0x50, 0xcc, 0x1f, 0x16, 0x2f, 0xc9, 0x18, 0xd5, 0x53,
  0xcc, 0xaf, 0x2a, 0x18, 0xbc, 0x16, 0xa1, 0x48, 0xe5, 0x9e, 0x65, 0xaf,
  0x26, 0x3f, 0xe9, 0x7c, 0xa8, 0x14, 0x4d, 0x3b, 0x23, 0x9f, 0x35, 0x76,
  0x20, 0x5d, 0x97, 0xdf, 0x69, 0x2a, 0xda, 0x47, 0xe5, 0x6f, 0x0d, 0xa5,
  0x3b, 0xa9, 0xa8, 0x82, 0x0a, 0x7b, 0xd5, 0xa8, 0x82, 0x6f, 0x31, 0x61,
  0x5a, 0xc4, 0x58, 0xc4, 0x19, 0x57, 0x35, 0x71, 0x0a, 0x20, 0x87, 0xa1,
  0x3f, 0x39, 0x14, 0x3a, 0x2b, 0x34, 0x24, 0xa4, 0xc3, 0x4e, 0x57, 0xf1,
  0x25, 0x29, 0xed, 0x3b, 0x76, 0xa8, 0xff, 0x9a, 0x34, 0x99, 0xe7, 0x87,
  0x0c, 0x40, 0x06, 0xb7, 0xbb, 0x85, 0x39, 0xe4, 0x91, 0xb0, 0x3c, 0xd5,
  0x3d, 0x96, 0x30, 0xa6, 0xe5, 0x04, 0x96, 0xe5, 0xe3, 0x55, 0xa0, 0x98,
  0x96, 0x13, 0xc8, 0x4f, 0xe6, 0x9d, 0xc9, 0x2f, 0x9d, 0xae, 0x26, 0xad,
  0x80, 0x5b, 0x7f, 0x60, 0xbe, 0x5c, 0xc9, 0xf1, 0xe3, 0x21, 0x31, 0xeb,
  0x3e, 0x16, 0xb6, 0xa8, 0x64, 0x88, 0x0a, 0x5b, 0x8b, 0xf3, 0x76, 0xfc,
  0xf8, 0xf2, 0xa2, 0xb0, 0x12, 0x61, 0xd5, 0x05, 0x91, 0xdc, 0xca, 0xe3,
  0x83, 0x95, 0xb9, 0x0a, 0xe1, 0x54, 0x27, 0x4a, 0x0d, 0x8c, 0x9f, 0x13,
  0xe7, 0xef, 0xef, 0x8a, 0xd3, 0x63, 0xad, 0xce, 0xee, 0x61, 0xd7, 0xb8,
  0xee, 0xf2, 0xa8, 0x7c, 0xf0, 0x1c, 0xea, 0xbd, 0x5c, 0x34, 0x31, 0xc6,
  0x56, 0x79, 0x8e, 0x51, 0xcc, 0x0c, 0x73, 0xc1, 0x65, 0x6e, 0x44, 0x33,
  0x3f, 0x44, 0x9f, 0x80, 0x1b, 0x2f, 0xf3, 0x92, 0xd6, 0xc6, 0xcb, 0xbc,
  0xa8, 0x77, 0x21, 0xea, 0x5a, 0x39, 0x91, 0x05, 0xc3, 0x4f, 0x27, 0xc1,
  0x35, 0x6e, 0x64, 0xc1, 0x15, 0x57, 0x7e, 0x48, 0x0f, 0xd8, 0xf9, 0x22,
  0x0c, 0x6f, 0x85, 0x59, 0xb4, 0x86, 0x0f, 0xc9, 0x39, 0xc9, 0xee, 0x5f,
  0x7e, 0x30, 0xfe, 0x95, 0x39, 0xf7, 0xa1, 0x90, 0x81, 0x24, 0xc8, 0x40,
  0xee, 0x61, 0x19, 0x28, 0x8d, 0x72, 0xdf, 0x77, 0xd8, 0x89, 0xc0, 0x1d,
  0xd7, 0x1f, 0xe8, 0x1f, 0xb0, 0xe1, 0x23, 0x86, 0x73, 0x24, 0xdd, 0xe4,
  0x52, 0x7c, 0x30, 0xbe, 0x94, 0x25, 0xbf, 0xed, 0xf0, 0xf3, 0xa1, 0x28,
  0xf5, 0x7c, 0x85, 0x90, 0x49, 0xf6, 0xa0, 0xec, 0x4b, 0x57, 0x53, 0xd7,
  0x9f, 0x0c, 0x65, 0x0e, 0x7d, 0xd6, 0xa6, 0x5b, 0xb1, 0x76, 0x8f, 0x28,
  0xbf, 0x69, 0xa3, 0x17, 0x57, 0x4c, 0xd9, 0x6b, 0x93, 0x79, 0x1c, 0x4d,
  0xa9, 0x79, 0x44, 0x9f, 0x05, 0x0b, 0xdf, 0x90, 0x1f, 0xcc, 0xa6, 0xeb,
  0xe8, 0x42, 0x11, 0xe9, 0xe0, 0x49, 0x20, 0x68, 0xf5, 0xec, 0x7b, 0x6d,
  0x66, 0xc6, 0x01, 0x9a, 0x84, 0x23, 0x61, 0x6e, 0x2e, 0x94, 0x74, 0xde,
  0x97, 0x99, 0x47, 0x61, 0xce, 0x12, 0xe9, 0xc1, 0x90, 0x7c, 0x42, 0x30,
  0xe8, 0x01, 0x1a, 0xe3, 0x11, 0x27, 0x74, 0x06, 0x55, 0x9e, 0xae, 0x81,
  0x0b, 0xd5, 0x27, 0xf0, 0x4d, 0x78, 0x26, 0xa7, 0x96, 0xce, 0xba, 0x8f,
  0xbe, 0xcf, 0xa1, 0x58, 0x18, 0x00, 0x30, 0xf6, 0x99, 0x81, 0xfb, 0x17,
  0xd3, 0x41, 0x8f, 0x6d, 0x46, 0xf2, 0xeb, 0x7f, 0xc7, 0xfc, 0x35, 0x8a,
  0x85, 0x0a, 0x95, 0x1f, 0xff, 0x3a, 0xa2, 0x3d, 0x7f, 0x18, 0xf7, 0xcd,
  0x41, 0xa4, 0xa7, 0xdb, 0x0a, 0x2b, 0x80, 0x01, 0xaa, 0x07, 0xeb, 0x64,
  0x7d, 0x33, 0xcf, 0xe0, 0x91, 0x33, 0x1a, 0xbb, 0xb8, 0x59, 0xc6, 0xdf,
  0x12, 0x38, 0x85, 0xd0, 0xb3, 0x4c, 0x0d, 0xe0, 0x7a, 0x63, 0x7f, 0x76,
  0x19, 0x3a, 0x5e, 0x7c, 0xc6, 0x8e, 0xe8, 0x74, 0xb6, 0x7c, 0xc8, 0x00,
  0x59, 0xfc, 0xce, 0x04, 0x53, 0x86, 0xbc, 0x4c, 0x91, 0x68, 0x0a, 0x5d,
  0xa8, 0x49, 0x32, 0x77, 0x2b, 0x2a, 0xb2, 0x6f, 0x00, 0x51, 0xfa, 0x84,
  0x2e, 0x9a, 0xe4, 0x7e, 0x86, 0x2f, 0xa1, 0x96, 0xba, 0x71, 0xe8, 0x56,
  0x7b, 0xa5, 0x0a, 0xbe, 0x7c, 0x69, 0xe1, 0x33, 0x47, 0x80, 0xa6, 0x87,
  0x04, 0x07, 0x4b, 0x0f, 0xe5, 0xda, 0xa2, 0x38, 0x52, 0x56, 0xeb, 0xf4,
  0x4c, 0xec, 0xa8, 0x28, 0x72, 0xe1, 0x86, 0x68, 0x94, 0x35, 0x4d, 0xc4,
  0x91, 0x34, 0xf7, 0x54, 0x52, 0xc3, 0x32, 0xed, 0x0b, 0x0f, 0x5f, 0x4c,
  0x66, 0xf3, 0x4c, 0xee, 0xdb, 0x7f, 0xd5, 0x64, 0x21, 0x94, 0xfb, 0x8f,
  0x9b, 0xec, 0xfb, 0xe5, 0xc9, 0xbe, 0xff, 0xaa, 0xc9, 0x16, 0x69, 0x1d,
  0x1e, 0xae, 0x81, 0x83, 0x33, 0xd3, 0x83, 0x65, 0x6e, 0x08, 0x0d, 0xc8,
  0x8f, 0xaa, 0xb7, 0xbf, 0x61, 0xca, 0x21, 0x7d, 0xec, 0x94, 0x7b, 0x78,
  0x83, 0xb3, 0x68, 0xe2, 0xb2, 0xe3, 0x2f, 0x9f, 0x3e, 0xf2, 0xf6, 0x1d,
  0xd3, 0x17, 0x5b, 0x96, 0xea, 0xaa, 0xb8, 0xa8, 0x88, 0xfe, 0x96, 0x53,
  0x7c, 0xd9, 0x9d, 0x6e, 0xf4, 0xb3, 0x0b, 0x28, 0xd9, 0xd6, 0x47, 0x95,
  0x24, 0x8f, 0xa9, 0x16, 0xbe, 0x33, 0xb6, 0xa5, 0x4b, 0x18, 0xa5, 0x12,
  0x52, 0xd7, 0x2f, 0x9c, 0x64, 0xee, 0xf5, 0x1b, 0xdf, 0xeb, 0xf8, 0xf6,
  0xe2, 0x14, 0x0f, 0x1e, 0xd3, 0x8b, 0x1f, 0xf0, 0x0f, 0x6f, 0xe8, 0xde,
  0x3f, 0xec, 0xa6, 0xf7, 0x45, 0x43, 0x76, 0x69, 0x37, 0xff, 0x42, 0xd0,
  0x38, 0xa4, 0x43, 0x50, 0x20, 0x70, 0x6d, 0x51, 0xbd, 0xfe, 0xe1, 0xe5,
  0xd3, 0x8f, 0x65, 0x58, 0x88, 0xb4, 0xe0, 0xc3, 0x68, 0xc1, 0x97, 0xa7,
  0x1f, 0x7f, 0x31, 0xea, 0x23, 0xa7, 0xa2, 0xdc, 0x63, 0xae, 0xdc, 0xd2,
  0x45, 0x85, 0x5f, 0x5b, 0x82, 0x4c, 0x80, 0x23, 0xb1, 0xeb, 0xf6, 0x40,
  0x9b, 0x35, 0xee, 0x4a, 0xed, 0x66, 0xea, 0xa1, 0xcc, 0x2a, 0x4b, 0xe6,
  0xcc, 0x0a, 0xc3, 0xae, 0xf1, 0x30, 0xc2, 0xbe, 0xf2, 0x05, 0x17, 0xfb,
  0xaa, 0x04, 0x73, 0x79, 0x55, 0x25, 0xa1, 0xc3, 0x6e, 0xbd, 0x68, 0xd8,
  0xa4, 0x25, 0x97, 0x5e, 0xf8, 0xcb, 0x9a, 0xcb, 0xf7, 0x8d, 0x35, 0xf9,
  0x86, 0xa9, 0x96, 0xbb, 0x72, 0xbc, 0x9b, 0x2d, 0x14, 0x13, 0x56, 0x96,
  0xcb, 0x4c, 0xa5, 0x4b, 0xad, 0x7c, 0xb5, 0x02, 0x23, 0xd6, 0x13, 0x58,
  0xf6, 0x12, 0xd1, 0x2e, 0x7b, 0x61, 0x4e, 0xbe, 0x27, 0x27, 0xde, 0x98,
  0x23, 0x8e, 0xdd, 0x2a, 0x81, 0xb8, 0x4b, 0xfc, 0xbe, 0x07, 0x2a, 0x3d,
  0x6a, 0xd6, 0xeb, 0x96, 0xed, 0x7d, 0x8a, 0x20, 0x67, 0xfb, 0x53, 0x7b,
  0xe8, 0xc2, 0x2a, 0x17, 0xc3, 0x42, 0x1d, 0xdf, 0x2e, 0xa8, 0xbb, 0xce,
  0x20, 0xaa, 0xa3, 0xc9, 0x6c, 0xd4, 0x36, 0x6b, 0x3b, 0xf8, 0xad, 0x06,
  0xeb, 0x22, 0xf5, 0x57, 0x5a, 0x28, 0x2b, 0x23, 0x62, 0x8d, 0x71, 0x85,
  0x1e, 0xb7, 0xb4, 0x69, 0x3c, 0xac, 0x3e, 0xd7, 0x5e, 0x2c, 0x33, 0xf0,
  0x82, 0xcf, 0x9c, 0x24, 0x6f, 0xed, 0xc9, 0x6a, 0x95, 0x14, 0xbe, 0xae,
  0x97, 0x1c, 0x42, 0x22, 0xef, 0xad, 0x55, 0xaf, 0x77, 0x95, 0x38, 0x40,
  0xb2, 0x33, 0xce, 0x1f, 0xc5, 0x5d, 0x1e, 0x4d, 0x32, 0x9d, 0xed, 0x34,
  0xa3, 0x85, 0x67, 0xe5, 0xee, 0xe4, 0x27, 0xe4, 0xf1, 0x57, 0x7b, 0x64,
  0xaf, 0x99, 0x32, 0xa4, 0xa4, 0xaa, 0x50, 0xe7, 0x55, 0x97, 0xbf, 0x07,
  0x04, 0x0f, 0x92, 0xc0, 0x25, 0xf8, 0x6d, 0x21, 0xd5, 0x35, 0x76, 0x35,
  0x36, 0xeb, 0x3d, 0xdb, 0xb9, 0x43, 0xf9, 0xcb, 0x37, 0x73, 0x08, 0x3b,
  0x8d, 0x4c, 0x1e, 0x41, 0x58, 0x00, 0x90, 0x85, 0x4c, 0xec, 0xa7, 0xa8,
  0x93, 0xd9, 0x60, 0x51, 0x87, 0x30, 0xf1, 0xa2, 0x2e, 0x59, 0x5e, 0xca,
  0xbb, 0x3b, 0x99, 0x57, 0x39, 0x33, 0x18, 0x0e, 0xbb, 0x11, 0x85, 0x48,
  0xd9, 0x3b, 0x52, 0x02, 0xb3, 0x94, 0xc1, 0x2c, 0x01, 0x26, 0x47, 0x60,
  0x12, 0x41, 0x49, 0x70, 0xd1, 0xf0, 0x5f, 0x9e, 0xf2, 0x7f, 0x27, 0x19,
  0x16, 0x7e, 0xb1, 0x45, 0x00, 0x00
};


#define SPIFFS_MAXLENGTH_FILEPATH 32
const char *excludeListFile = "/.exclude.files";

typedef struct ExcludeListS {
    char *item;
    ExcludeListS *next;
} ExcludeList;

static ExcludeList *excludes = NULL;

static bool matchWild(const char *pattern, const char *testee) {
  const char *nxPat = NULL, *nxTst = NULL;

  while (*testee) {
    if (( *pattern == '?' ) || (*pattern == *testee)){
      pattern++;testee++;
      continue;
    }
    if (*pattern=='*'){
      nxPat=pattern++; nxTst=testee;
      continue;
    }
    if (nxPat){
      pattern = nxPat+1; testee=++nxTst;
      continue;
    }
    return false;
  }
  while (*pattern=='*'){pattern++;}
  return (*pattern == 0);
}

static bool addExclude(const char *item){
    size_t len = strlen(item);
    if(!len){
        return false;
    }
    ExcludeList *e = (ExcludeList *)malloc(sizeof(ExcludeList));
    if(!e){
        return false;
    }
    e->item = (char *)malloc(len+1);
    if(!e->item){
        free(e);
        return false;
    }
    memcpy(e->item, item, len+1);
    e->next = excludes;
    excludes = e;
    return true;
}

static void loadExcludeList(fs::FS &_fs, const char *filename){
    static char linebuf[SPIFFS_MAXLENGTH_FILEPATH];
    fs::File excludeFile=_fs.open(filename, "r");
    if(!excludeFile){
        //addExclude("/*.js.gz");
        return;
    }
#ifdef ESP32
    if(excludeFile.isDirectory()){
      excludeFile.close();
      return;
    }
#endif
    if (excludeFile.size() > 0){
      uint8_t idx;
      bool isOverflowed = false;
      while (excludeFile.available()){
        linebuf[0] = '\0';
        idx = 0;
        int lastChar;
        do {
          lastChar = excludeFile.read();
          if(lastChar != '\r'){
            linebuf[idx++] = (char) lastChar;
          }
        } while ((lastChar >= 0) && (lastChar != '\n') && (idx < SPIFFS_MAXLENGTH_FILEPATH));

        if(isOverflowed){
          isOverflowed = (lastChar != '\n');
          continue;
        }
        isOverflowed = (idx >= SPIFFS_MAXLENGTH_FILEPATH);
        linebuf[idx-1] = '\0';
        if(!addExclude(linebuf)){
            excludeFile.close();
            return;
        }
      }
    }
    excludeFile.close();
}

static bool isExcluded(fs::FS &_fs, const char *filename) {
  if(excludes == NULL){
      loadExcludeList(_fs, excludeListFile);
  }
  ExcludeList *e = excludes;
  while(e){
    if (matchWild(e->item, filename)){
      return true;
    }
    e = e->next;
  }
  return false;
}

// WEB HANDLER IMPLEMENTATION

#ifdef ESP32
SPIFFSEditor::SPIFFSEditor(const fs::FS& fs, const String& username, const String& password, const String& uri)
#else
SPIFFSEditor::SPIFFSEditor(const String& username, const String& password, const fs::FS& fs, const String& uri)
#endif
:_fs(fs)
,_username(username)
,_password(password)
,_authenticated(false)
,_startTime(0)
,_uri(uri)
{}

bool SPIFFSEditor::canHandle(AsyncWebServerRequest *request){
  if(request->url().equalsIgnoreCase(_uri)){
    if(request->method() == HTTP_GET){
      if(request->hasParam("list"))
        return true;
      if(request->hasParam("edit")){
        request->_tempFile = _fs.open(request->arg("edit"), "r");
        if(!request->_tempFile){
          return false;
        }
#ifdef ESP32
        if(request->_tempFile.isDirectory()){
          request->_tempFile.close();
          return false;
        }
#endif
      }
      if(request->hasParam("download")){
        request->_tempFile = _fs.open(request->arg("download"), "r");
        if(!request->_tempFile){
          return false;
        }
#ifdef ESP32
        if(request->_tempFile.isDirectory()){
          request->_tempFile.close();
          return false;
        }
#endif
      }
      request->addInterestingHeader("If-Modified-Since");
      return true;
    }
    else if(request->method() == HTTP_POST)
      return true;
    else if(request->method() == HTTP_DELETE)
      return true;
    else if(request->method() == HTTP_PUT)
      return true;

  }
  return false;
}


void SPIFFSEditor::handleRequest(AsyncWebServerRequest *request){
  if(_username.length() && _password.length() && !request->authenticate(_username.c_str(), _password.c_str()))
    return request->requestAuthentication();

  if(request->method() == HTTP_GET){
    if(request->hasParam("list")){
      String path = request->getParam("list")->value();
#ifdef ESP32
      File dir = _fs.open(path);
#else
      Dir dir = _fs.openDir(path);
#endif
      path = String();
      String output = "[";
#ifdef ESP32
      File entry = dir.openNextFile();
      while(entry){
#else
      while(dir.next()){
        fs::File entry = dir.openFile("r");
#endif
        if (isExcluded(_fs, entry.name())) {
#ifdef ESP32
            entry = dir.openNextFile();
#endif
            continue;
        }
        if (output != "[") output += ',';
        output += "{\"type\":\"";
        output += (entry.isDirectory() ? "dir" : "file");
        output += "\",\"name\":\"";
        output += String(entry.name());
        output += "\",\"size\":";
        output += (entry.isDirectory() ? "0" : String(entry.size()));
        output += "}";
#ifdef ESP32
        entry = dir.openNextFile();
#else
        entry.close();
#endif
      }
#ifdef ESP32
      dir.close();
#endif
      output += "]";
      request->send(200, "application/json", output);
      output = String();
    }
    else if(request->hasParam("edit") || request->hasParam("download")){
      request->send(request->_tempFile, request->_tempFile.name(), String(), request->hasParam("download"));
    }
    else {
      const char * buildTime = __DATE__ " " __TIME__ " GMT";
      if (request->header("If-Modified-Since").equals(buildTime)) {
        request->send(304);
      } else {
        AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", edit_htm_gz, edit_htm_gz_len);
        response->addHeader("Content-Encoding", "gzip");
        response->addHeader("Last-Modified", buildTime);
        request->send(response);
      }
    }
  } else if(request->method() == HTTP_DELETE){
    if(request->hasParam("path", true)){
        _fs.remove(request->getParam("path", true)->value());
      request->send(200, "", "DELETE: "+request->getParam("path", true)->value());
    } else
      request->send(404);
  } else if(request->method() == HTTP_POST){
    if(request->hasParam("data", true, true) && _fs.exists(request->getParam("data", true, true)->value()))
      request->send(200, "", "UPLOADED: "+request->getParam("data", true, true)->value());
    else
      request->send(500);
  } else if(request->method() == HTTP_PUT){
    if(request->hasParam("path", true)){
      String filename = request->getParam("path", true)->value();
      if(_fs.exists(filename)){
        request->send(200);
      } else {
        fs::File f = _fs.open(filename, "w");
        if(f){
          f.write((uint8_t)0x00);
          f.close();
          request->send(200, "", "CREATE: "+filename);
        } else {
          request->send(500);
        }
      }
    } else
      request->send(400);
  }
}

void SPIFFSEditor::handleUpload(AsyncWebServerRequest *request, const String& filename, size_t index, uint8_t *data, size_t len, bool final){
  if(!index){
    if(!_username.length() || request->authenticate(_username.c_str(),_password.c_str())){
      _authenticated = true;
      request->_tempFile = _fs.open(filename, "w");
      _startTime = millis();
    }
  }
  if(_authenticated && request->_tempFile){
    if(len){
      request->_tempFile.write(data,len);
    }
    if(final){
      request->_tempFile.close();
    }
  }
}
